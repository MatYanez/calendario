📌 PROYECTO WEB – CALENDARIO DE PROYECTOS

🕒 Fecha de generación: [Actualiza cuando lo uses]

────────────────────────────────────────────
🔧 TECNOLOGÍAS UTILIZADAS:
────────────────────────────────────────────
- Firebase Auth y Firestore (versión 8.10.1)
- JavaScript puro (sin frameworks)
- Bootstrap 5.3.3
- Font Awesome 6.5.0
- DataTables para visualización tabular
- Sistema de notificaciones personalizado tipo Toast
- Estructura modular por archivos JS

────────────────────────────────────────────
📁 ESTRUCTURA DE ARCHIVOS:
────────────────────────────────────────────
📁 js/
   ├─ firebase-init.js         // inicializa Firebase
   ├─ checkAuth.js             // redirige si no hay sesión
   ├─ login.js                 // controla el formulario de login
   ├─ activate-tab.js          // activa los tabs según URL
   ├─ requisitos.js            // lógica de registro, listado y detalle de proyectos
   ├─ proyectos.js             // tabla con todos los proyectos (DataTables)
   ├─ notificaciones.js        // función mostrarNotificacion()

📁 css/
   └─ styles.css               // estilos personalizados

📄 login.html                  // login con tarjeta centrada
📄 index.html                  // dashboard principal
📄 requisitos.html             // donde se agregan proyectos (con cards)
📄 proyectos.html              // listado completo de proyectos en tabla

────────────────────────────────────────────
✅ FUNCIONALIDADES YA IMPLEMENTADAS:
────────────────────────────────────────────
✔ Login y logout con Firebase Auth
✔ Protección de páginas mediante checkAuth.js
✔ Escondido de contenido con <div id="app"> hasta validar sesión
✔ Registro de proyecto con validación de campos obligatorios
✔ Guardado en Firestore con ID correlativo (usando transacción)
✔ Listado de proyectos como tarjetas en requisitos.html
✔ Listado de proyectos como tabla (DataTables) en proyectos.html
✔ Detalle de proyecto al hacer clic en una card
✔ Botón atrás desde el detalle
✔ Modal que se llena con los datos al presionar “Editar” en el detalle
✔ Sistema de notificaciones visuales con íconos
✔ Responsive completo (sidebar, tarjetas, formularios, etc.)

────────────────────────────────────────────
🧱 CAMPOS DEL PROYECTO (Firestore):
────────────────────────────────────────────
- tipo              (select: ANID, FONDART u otro personalizado)
- nombre            (texto obligatorio)
- p0                (P0 o personalizado)
- categoria         (Prioritario, Asociados, Desarrollo)
- propietario       (texto)
- estado            (texto)
- limiteVRA         (fecha)
- vra               (texto)
- limiteFirma       (fecha)
- firmaSG           (select: Pendiente, Etapa de formulación)
- cierre            (fecha)
- notas             (texto)
- distribuible      (texto)
- timestamp         (fecha de creación)
- id                (correlativo)

────────────────────────────────────────────
🧪 COSAS PENDIENTES O EN PROCESO:
────────────────────────────────────────────
🔄 Agregar modo edición completo que guarde los cambios en Firestore
📤 Permitir eliminar proyectos (opcional)
📊 Mostrar progreso real (de momento es aleatorio)
🖼 Posibilidad de subir imágenes reales por proyecto
🔐 Roles o permisos según tipo de usuario (opcional futuro)
📱 Mejorar el detalle en móviles

────────────────────────────────────────────
💬 NOTAS ADICIONALES:
────────────────────────────────────────────
- Todas las páginas están protegidas con `checkAuth.js`.
- El contenido se oculta visualmente hasta que `firebase.auth().onAuthStateChanged` valida sesión.
- El sistema de notificación visual usa emojis e íconos, barra de progreso y animación de desaparición.

────────────────────────────────────────────
🧠 PARA CONTINUAR MÁS TARDE:
────────────────────────────────────────────
- Copia y pega este archivo en el prompt de ChatGPT para continuar el proyecto exactamente donde lo dejaste.
